# Generated by Django 5.2.1 on 2025-05-18 11:40

import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FlexibleInvestmentAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('network', models.CharField(choices=[('TRC20', 'TRC20 (Tron)'), ('BEP20', 'BEP20 (BNB Smart Chain)'), ('Arbitrum', 'Arbitrum One')], max_length=50)),
                ('balance', models.DecimalField(decimal_places=8, default=Decimal('0.0'), max_digits=18)),
                ('last_payout_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flexible_investment_accounts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Flexible Investment Account',
                'verbose_name_plural': 'Flexible Investment Accounts',
                'ordering': ['user', 'network'],
                'unique_together': {('user', 'network')},
            },
        ),
        migrations.CreateModel(
            name='FlexiblePayout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=8, max_digits=18)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payouts', to='flexible_arbitrage.flexibleinvestmentaccount')),
            ],
            options={
                'verbose_name': 'Flexible Payout',
                'verbose_name_plural': 'Flexible Payouts',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='FlexibleTemporaryWallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('network', models.CharField(choices=[('TRC20', 'TRC20 (Tron)'), ('BEP20', 'BEP20 (BNB Smart Chain)'), ('Arbitrum', 'Arbitrum One')], max_length=50)),
                ('address', models.CharField(blank=True, db_index=True, max_length=255, null=True, unique=True)),
                ('encrypted_private_key', models.TextField(blank=True, null=True)),
                ('detected_amount', models.DecimalField(blank=True, decimal_places=8, max_digits=18, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('sweep_tx_id', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending_generation', 'Ожидает генерации'), ('pending_deposit', 'Ожидает депозита'), ('deposit_received', 'Депозит получен'), ('sweep_initiated', 'Свип инициирован'), ('sweep_success', 'Свип успешен'), ('sweep_failed', 'Свип неуспешен'), ('error', 'Ошибка обработки')], db_index=True, default='pending_generation', max_length=32)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flexible_temp_wallets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Flexible Temporary Wallet',
                'verbose_name_plural': 'Flexible Temporary Wallets',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FlexibleDeposit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=8, max_digits=18)),
                ('network', models.CharField(choices=[('TRC20', 'TRC20 (Tron)'), ('BEP20', 'BEP20 (BNB Smart Chain)'), ('Arbitrum', 'Arbitrum One')], max_length=50)),
                ('user_transaction_id', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deposits', to='flexible_arbitrage.flexibleinvestmentaccount')),
                ('temporary_wallet', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deposit_record', to='flexible_arbitrage.flexibletemporarywallet')),
            ],
            options={
                'verbose_name': 'Flexible Deposit',
                'verbose_name_plural': 'Flexible Deposits',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='FlexibleWithdrawal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_requested', models.DecimalField(decimal_places=8, max_digits=18)),
                ('commission', models.DecimalField(decimal_places=8, default=Decimal('5.0'), max_digits=18)),
                ('amount_received', models.DecimalField(decimal_places=8, max_digits=18)),
                ('network', models.CharField(choices=[('TRC20', 'TRC20 (Tron)'), ('BEP20', 'BEP20 (BNB Smart Chain)'), ('Arbitrum', 'Arbitrum One')], max_length=50)),
                ('wallet_address', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('REJECTED', 'Rejected')], db_index=True, default='PENDING', max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('transaction_id', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='withdrawals', to='flexible_arbitrage.flexibleinvestmentaccount')),
            ],
            options={
                'verbose_name': 'Flexible Withdrawal',
                'verbose_name_plural': 'Flexible Withdrawals',
                'ordering': ['-timestamp'],
            },
        ),
    ]
